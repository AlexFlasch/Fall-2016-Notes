#Algorithms 9/16/2016

##Proving Correctness

Use Strong induction  
Let P(N) = "bsearch(a, l, r, ) is correct when r - l = N" (including l, not including r)  
If N = 0 then r = 1, either x is present, or its not.  
Assume that P(N) is true for all M $\leq$ N.  
We must show that P(N + 1) is true

###Three cases

1. a[m] == x
2. a[m] < x
3. a[m] > x

###Loop invariants

A **loop invariant** is a statment about some loop that is always true.

* We must know three things about a loop invariant
	* Initialization: it is true **before** the first iteration
	* Maintenance: **if** it is true before an iteration, **then** it is true after that iteration
	* Termination: **after** the last iteration, it tells us something useful that helps us prove the algorithm is correct.

###Selection sort

Input: A sequence of N distinct* numbers: $a_0, a_1, ..., a_{n-1}$

Loop Invariant for selection sort:

* At the start of each iteration of the for loop: a[0] < a[1] < ... < a[p-1] and a[0], a[1], ..., a[p - 1] are the p smallest elements of a
	* **Before the first iteration** of the for loop, p = 0 and the sequence a[0], a[1], ..., a[p-1] is empty

